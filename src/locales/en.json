{
    "show_3d": "View PCB",
    "lang": "language",
    "project_description_title": "Project description",
    "project_description": "Development of a board for the firmware PX4 FMUV6U, dimensions of 55x40mm and an additional WiFi module for the implementation of cool stuff, for example, a distributed network",
    "idea_title": "The idea of the project",
    "idea": "Flight controller on STM32H7 with a place for RPi CM4 and built-in ESP32 to create a distributed network",
    "perspective_title": "Perspectives",
    "perspective": "Use CopterCat as the main flight controller on the \"Clover\" platform",
    "specs": "Specification",
    "fmu": "FMU",
    "fmu-lines": {
        "1": "STM32H753IK6 480MHz Cortex-M7",
        "2": "2mb + 256kb flash",
        "3": "1MB RAM",
        "4": "ICM20602, ICM42605, BMI088, BMP388, BMM150",
        "5": "Fully compatible with FMU-V6U standard"
    },
    "rpi": "RPi",
    "rpi-lines": {
        "1": "RPI CM4 Board Support",
        "2": "SD card slot",
        "3": "The ability to firm the built-in eMMC",
        "4": "CAT24C256 EEPROM",
        "5": "Support for 2 cameras (CAM0 - two lines, CAM1 - four lines)",
        "6": "USB-OTG Support"
    },
    "esp": "ESP32",
    "esp-lines": {
        "1": "16MB External Flash (W25Q128JVS)",
        "2": "8MB External PSRAM (LY68L6400SLIT)",
        "3": "Built-in antenna",
        "4": "USB-TTL Converter"
    },
    "misc": "Rest",
    "misc-lines": {
        "1": "USB-HUB USB2514B",
        "2": "USB-PD with physical switch",
        "3": "Communication between ESP32 and STM32 via UART",
        "4": "3 Power options",
        "5": "4 universal GPIO from ESP32",
        "6": "USB Type-C",
        "7": "Dimensions 40x55 mm, board has 4 layers"
    },
    "connectors": "Connectors and jumpers",
    "connectors-front": {
        "1": "GPIO ESP32 4 output port ports for connecting external equipment",
        "2": "RPI CM4 Connectors",
        "3": "8 ESC pins",
        "4": "Contacts for programming and debugging JTAG STM32",
        "5": "Camera connectors (contact cable 22 with 0.5 mm gap between conductors)"
    },
    "connectors-bottom": {
        "6": "Contact for connecting RGB strip",
        "7": "Low power contacts 5V",
        "8": "JST-6 standard PX4 power cable",
        "9": "JST-6 GPS+compass+5V",
        "10": "JST-4 I2C+5V",
        "11": "USB Type-C",
        "12": "JST-4 UART7 + 5V",
        "13": "JST-4 I2C RPI + 3.3B to connect laser sensor",
        "14": "JST-4 UART5 + 5V",
        "15": "JST-5 Standard connector for connecting the radio receiver",
        "16": "SD SD card (for RPI)",
        "17": "BOOT Jumper for STM32",
        "18": "RPIBOOT Jumper for RPI CM4 Module eMMC Firmware",
        "19": "Jumper for switching the USB operating mode (with a closed jumper, USB operates as an input Hub and when connected to the computer will be displayed by STM32, ESP32 and RPI CM4 in OTG mode; with a jammed jumper, USB will work to connect external devices to RPI, for example stereo camera)"
    },
    "rotate": "Turn over",
    "firmware": "Firmware loading",
    "fmu-firmware": {
        "1": "When you first start, you have to boot the PX4-Bootloader through the JTAG port.",
        "2": "From computer:",
        "3": "Short the jumper 19.",
        "4": "Connect USB Type-C to a computer",
        "5": "The device must appear in QGC",
        "6": "Also, the firmware can be loaded via RPI:",
        "7": "Install RPI CM4 in connector on the board",
        "8": "Short jumper 19",
        "9": "The device appears in the /dev folder on RPi",
        "10": "Detailed instructions here"
    },
    "esp-firmware": {
        "1": "You can write a program either in Arduino IDE or in VS Code with an ESP-IDF plugin. Next compile and load it to the microcontroller. You can load it in two ways",
        "2": "From computer:",
        "3": "Short the jumper 19.",
        "4": "CP2104 should appear in connected devices",
        "5": "Load the firmware in accordance with the instructions for the selected IDE",
        "6": "From RPi CM4:",
        "7": "Install RPi CM4 in connector on the board",
        "8": "Short jumper 19.",
        "9": "Compile your code to .bin format",
        "10": "Load the resulting file on RPI",
        "11": "Load the firmware into the microcontroller using esptool"
    },
    "rpi-firmware": {
        "1": "SD card slot works as on standard RPi. For boards with eMMC, the order of loading of the operating system does not differ from CM4 IO Board",
        "2": "instruction"
    },
    "3d-view": "And here you can look at the PCB",
    "open-source": "What about Open Source?",
    "os": {
        "1": "All sources you can find in",
        "2": "this",
        "3": "repository",
        "4": "All the files required for order are in the folder",
        "5": "/gerbers"
    },
    "about-esp": "More about ESP32",
    "more-esp": {
        "1": "One of the methods of using ESP32 is to create distributed networks for communication between drones, which in the future can greatly simplify work with drone swarms.",
        "2": "During the project, we tested one of the ways to create drone network: via",
        "3": "and"
    }
}